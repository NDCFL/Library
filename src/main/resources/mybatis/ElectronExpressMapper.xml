<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.cflwork.dao.ElectronExpressDao">

    <select id="get" resultType="top.cflwork.vo.ElectronExpressVo">
		select `id`,`read_user_id`,`read_user_name`,`read_user_card_num`,`title`,`subject`,`book_name`,`status`,`score`,`reason`,`create_time` from sys_electron_express
        where id=#{id}
	</select>

    <select id="list" resultType="top.cflwork.vo.ElectronExpressVo">
        select
        `id`,`read_user_id`,`read_user_name`,`read_user_card_num`,`title`,`subject`,`book_name`,`status`,`score`,`reason`,`create_time`
        from sys_electron_express
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="readUserId != null and readUserId != ''">and read_user_id = #{readUserId}</if>
            <if test="readUserName != null and readUserName != ''">and read_user_name  like concat('%${readUserName}%')</if>
            <if test="readUserCardNum != null and readUserCardNum != ''">and read_user_card_num like concat('%${readUserCardNum}%')</if>
            <if test="title != null and title != ''">and title like concat('%${title}%')</if>
            <if test="subject != null and subject != ''">and subject  like concat('%${subject}%')</if>
            <if test="bookName != null and bookName != ''">and book_name  like concat('%${bookName}%')</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="score != null and score != ''">and score = #{score}</if>
            <if test="reason != null and reason != ''">and reason  like concat('%${reason}%')</if>
            <if test="createTime != null and endTime != null">and create_time between  #{createTime} and #{endTime}</if>
        </where>
        <choose>
            <when test="pager.sort != null and pager.order != null">
                order by ${pager.sort} ${pager.order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="pager.pageIndex != null and pager.pageSize != null">
            limit #{pager.pageIndex}, #{pager.pageSize}
        </if>
    </select>

    <select id="count" resultType="long">
        select count(id) from sys_electron_express
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="readUserId != null and readUserId != ''">and read_user_id = #{readUserId}</if>
            <if test="readUserName != null and readUserName != ''">and read_user_name  like concat('%${readUserName}%')</if>
            <if test="readUserCardNum != null and readUserCardNum != ''">and read_user_card_num like concat('%${readUserCardNum}%')</if>
            <if test="title != null and title != ''">and title like concat('%${title}%')</if>
            <if test="subject != null and subject != ''">and subject  like concat('%${subject}%')</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="score != null and score != ''">and score = #{score}</if>
            <if test="reason != null and reason != ''">and reason  like concat('%${reason}%')</if>
            <if test="createTime != null and endTime != null">and create_time between  #{createTime} and #{endTime}</if>
        </where>
    </select>

    <insert id="save" parameterType="top.cflwork.vo.ElectronExpressVo">
		insert into sys_electron_express
		(
			`id`, 
			`read_user_id`, 
			`read_user_name`, 
			`read_user_card_num`, 
			`title`, 
			`subject`, 
			`status`,
			`score`, 
			`reason`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{readUserId}, 
			#{readUserName}, 
			#{readUserCardNum}, 
			#{title}, 
			#{subject}, 
			#{status},
			#{score}, 
			#{reason}, 
			#{createTime}
		)
	</insert>

    <insert id="batchSave" parameterType="top.cflwork.vo.ElectronExpressVo">
        insert into sys_electron_express
        (
        `id`,
        `read_user_id`,
        `read_user_name`,
        `read_user_card_num`,
        `title`,
        `subject`,
        `status`,
        `score`,
        `reason`,
        `create_time`
        )
        values
        <foreach collection="list" item="electronExpressVo" separator=",">
            (
            #{electronExpressVo.id},
            #{electronExpressVo.readUserId},
            #{electronExpressVo.readUserName},
            #{electronExpressVo.readUserCardNum},
            #{electronExpressVo.title},
            #{electronExpressVo.subject},
            #{electronExpressVo.status},
            #{electronExpressVo.score},
            #{electronExpressVo.reason},
            #{electronExpressVo.createTime}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="top.cflwork.vo.ElectronExpressVo">
        update sys_electron_express
        <set>
            <if test="readUserId != null">`read_user_id` = #{readUserId},</if>
            <if test="readUserName != null">`read_user_name` = #{readUserName},</if>
            <if test="readUserCardNum != null">`read_user_card_num` = #{readUserCardNum},</if>
            <if test="title != null">`title` = #{title},</if>
            <if test="subject != null">`subject` = #{subject},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="score != null">`score` = #{score},</if>
            <if test="reason != null">`reason` = #{reason},</if>
            <if test="createTime != null">`create_time` = #{createTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
		delete from sys_electron_express where id=#{id}

	</delete>

    <delete id="batchRemove">
        delete from sys_electron_express where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>