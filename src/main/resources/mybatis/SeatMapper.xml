<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.cflwork.dao.SeatDao">

    <select id="get" resultType="top.cflwork.vo.SeatVo">
		select s.`id`,s.`title`,s.`readding_id`,s.`status`,s.`create_time`,s.`library_id`,r.title as 'readdingName' from sys_seat s left join sys_reading_room r on s.readding_id=r.id
        where  s.id=#{id}
	</select>

    <select id="list" resultType="top.cflwork.vo.SeatVo">
        select s.`id`,s.`title`,s.`readding_id`,s.`status`,s.`create_time`,s.`library_id`,r.title as 'readdingName' from sys_seat s left join sys_reading_room r on s.readding_id=r.id
        <where>
            <if test="id != null and id != ''">and s.id = #{id}</if>
            <if test="title != null and title != ''">and s.title = #{title}</if>
            <if test="readdingId != null and readdingId != ''">and s.readding_id = #{readdingId}</if>
            <if test="status != null and status != ''">and s.status = #{status}</if>
            <if test="createTime != null and createTime != ''">and s.create_time = #{createTime}</if>
            <if test="libraryId != null and libraryId != ''">and library_id = #{libraryId}</if>
        </where>
        <choose>
            <when test="pager.sort != null and pager.order != null">
                order by s.${pager.sort} ${pager.order}
            </when>
            <otherwise>
                order by s.id desc
            </otherwise>
        </choose>
        <if test="pager.pageIndex != null and pager.pageSize != null">
            limit #{pager.pageIndex}, #{pager.pageSize}
        </if>
    </select>

    <select id="count" resultType="long">
        select count(id) from sys_seat
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="title != null and title != ''">and title = #{title}</if>
            <if test="readdingId != null and readdingId != ''">and readding_id = #{readdingId}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
            <if test="libraryId != null and libraryId != ''">and library_id = #{libraryId}</if>
        </where>
    </select>

    <insert id="save" parameterType="top.cflwork.vo.SeatVo">
		insert into sys_seat
		(
			`id`, 
			`title`, 
			`readding_id`, 
			`status`, 
			`create_time`,
			`library_id`
		)
		values
		(
			#{id}, 
			#{title}, 
			#{readdingId}, 
			#{status}, 
			#{createTime},
			#{libraryId}
		)
	</insert>

    <insert id="batchSave" parameterType="top.cflwork.vo.SeatVo">
        insert into sys_seat
        (
        `id`,
        `title`,
        `readding_id`,
        `status`,
        `create_time`,
        `library_id`
        )
        values
        <foreach collection="list" item="seatVo" separator=",">
            (
            #{seatVo.id},
            #{seatVo.title},
            #{seatVo.readdingId},
            #{seatVo.status},
            #{seatVo.createTime},
            #{seatVo.libraryId}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="top.cflwork.vo.SeatVo">
        update sys_seat
        <set>
            <if test="title != null">`title` = #{title},</if>
            <if test="readdingId != null">`readding_id` = #{readdingId},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="libraryId != null and libraryId != ''">library_id = #{libraryId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
		delete from sys_seat where id=#{id}

	</delete>

    <delete id="batchRemove">
        delete from sys_seat where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>