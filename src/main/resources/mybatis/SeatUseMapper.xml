<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.cflwork.dao.SeatUseDao">

    <select id="get" resultType="top.cflwork.vo.SeatUseVo">
		select `id`,`reading_room_id`,`read_user_id`,`seat_id`,`name`,`use_start_time`,`use_end_time`,`status`,`create_time`,`reading_room_name`,`library_id` from sys_seat_use
        where id=#{id}
	</select>

    <select id="list" resultType="top.cflwork.vo.SeatUseVo">
        select
        `id`,`reading_room_id`,`read_user_id`,`seat_id`,`name`,`use_start_time`,`use_end_time`,`status`,`create_time`,`reading_room_name`,`library_id`
        from sys_seat_use
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="readingRoomId != null and readingRoomId != ''">and reading_room_id = #{readingRoomId}</if>
            <if test="readUserId != null and readUserId != ''">and read_user_id = #{readUserId}</if>
            <if test="seatId != null and seatId != ''">and seat_id = #{seatId}</if>
            <if test="name != null and name != ''">and name = #{name}</if>
            <if test="useStartTime != null and useStartTime != ''">and use_start_time = #{useStartTime}</if>
            <if test="useEndTime != null and useEndTime != ''">and use_end_time = #{useEndTime}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
            <if test="readingRoomName != null and readingRoomName != ''">and reading_room_name = #{readingRoomName}</if>
            <if test="libraryId != null and libraryId != ''">and library_id = #{libraryId}</if>
        </where>
        <choose>
            <when test="pager.sort != null and pager.order != null">
                order by ${pager.sort} ${pager.order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="pager.pageIndex != null and pager.pageSize != null">
            limit #{pager.pageIndex}, #{pager.pageSize}
        </if>
    </select>

    <select id="count" resultType="long">
        select count(id) from sys_seat_use
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="readingRoomId != null and readingRoomId != ''">and reading_room_id = #{readingRoomId}</if>
            <if test="readUserId != null and readUserId != ''">and read_user_id = #{readUserId}</if>
            <if test="seatId != null and seatId != ''">and seat_id = #{seatId}</if>
            <if test="name != null and name != ''">and name = #{name}</if>
            <if test="useStartTime != null and useStartTime != ''">and use_start_time = #{useStartTime}</if>
            <if test="useEndTime != null and useEndTime != ''">and use_end_time = #{useEndTime}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
            <if test="readingRoomName != null and readingRoomName != ''">and reading_room_name = #{readingRoomName}</if>
            <if test="libraryId != null and libraryId != ''">and library_id = #{libraryId}</if>
        </where>
    </select>

    <insert id="save" parameterType="top.cflwork.vo.SeatUseVo">
		insert into sys_seat_use
		(
			`id`, 
			`reading_room_id`, 
			`read_user_id`, 
			`seat_id`, 
			`name`, 
			`use_start_time`, 
			`use_end_time`, 
			`status`, 
			`create_time`, 
			`reading_room_name`,
			`library_id`
		)
		values
		(
			#{id}, 
			#{readingRoomId}, 
			#{readUserId}, 
			#{seatId}, 
			#{name}, 
			#{useStartTime}, 
			#{useEndTime}, 
			#{status}, 
			now(),
			#{readingRoomName},
			#{libraryId}
		)
	</insert>

    <insert id="batchSave" parameterType="top.cflwork.vo.SeatUseVo">
        insert into sys_seat_use
        (
        `id`,
        `reading_room_id`,
        `read_user_id`,
        `seat_id`,
        `name`,
        `use_start_time`,
        `use_end_time`,
        `status`,
        `create_time`,
        `reading_room_name`,
        `library_id`
        )
        values
        <foreach collection="list" item="seatUseVo" separator=",">
            (
            #{seatUseVo.id},
            #{seatUseVo.readingRoomId},
            #{seatUseVo.readUserId},
            #{seatUseVo.seatId},
            #{seatUseVo.name},
            #{seatUseVo.useStartTime},
            #{seatUseVo.useEndTime},
            #{seatUseVo.status},
            now(),
            #{seatUseVo.readingRoomName},
            #{seatUseVo.libraryId}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="top.cflwork.vo.SeatUseVo">
        update sys_seat_use
        <set>
            <if test="readingRoomId != null">`reading_room_id` = #{readingRoomId},</if>
            <if test="readUserId != null">`read_user_id` = #{readUserId},</if>
            <if test="seatId != null">`seat_id` = #{seatId},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="useStartTime != null">`use_start_time` = #{useStartTime},</if>
            <if test="useEndTime != null">`use_end_time` = #{useEndTime},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="readingRoomName != null">`reading_room_name` = #{readingRoomName},</if>
            <if test="libraryId != null and libraryId != ''">library_id = #{libraryId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
		delete from sys_seat_use where id=#{id}

	</delete>

    <delete id="batchRemove">
        delete from sys_seat_use where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>