<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.cflwork.dao.BorrowDao">

    <select id="get" resultType="top.cflwork.vo.BorrowVo">
		select `id`,`read_user_id_in`,`book_id`,`borrow_time`,`in_time`,`book_name`,`publish_time`,`isbn`,`in_name`,`out_name`,`status`,`create_time` from sys_borrow
        where id=#{id}
	</select>

    <select id="list" resultType="top.cflwork.vo.BorrowVo">
        select
        `id`,`read_user_id_in`,`book_id`,`borrow_time`,`in_time`,`book_name`,`publish_time`,`isbn`,`in_name`,`out_name`,`status`,`create_time`
        from sys_borrow
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="readUserIdIn != null and readUserIdIn != ''">and read_user_id_in = #{readUserIdIn}</if>
            <if test="bookId != null and bookId != ''">and book_id = #{bookId}</if>
            <if test="borrowTime != null and borrowTime != ''">and borrow_time = #{borrowTime}</if>
            <if test="inTime != null and inTime != ''">and in_time = #{inTime}</if>
            <if test="bookName != null and bookName != ''">and book_name = #{bookName}</if>
            <if test="publishTime != null and publishTime != ''">and publish_time = #{publishTime}</if>
            <if test="isbn != null and isbn != ''">and isbn = #{isbn}</if>
            <if test="inName != null and inName != ''">and in_name = #{inName}</if>
            <if test="outName != null and outName != ''">and out_name = #{outName}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
        </where>
        <choose>
            <when test="pager.sort != null and pager.order != null">
                order by ${pager.sort} ${pager.order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="pager.pageIndex != null and pager.pageSize != null">
            limit #{pager.pageIndex}, #{pager.pageSize}
        </if>
    </select>

    <select id="count" resultType="long">
        select count(id) from sys_borrow
        <where>
            <if test="id != null and id != ''">and id = #{id}</if>
            <if test="readUserIdIn != null and readUserIdIn != ''">and read_user_id_in = #{readUserIdIn}</if>
            <if test="bookId != null and bookId != ''">and book_id = #{bookId}</if>
            <if test="borrowTime != null and borrowTime != ''">and borrow_time = #{borrowTime}</if>
            <if test="inTime != null and inTime != ''">and in_time = #{inTime}</if>
            <if test="bookName != null and bookName != ''">and book_name = #{bookName}</if>
            <if test="publishTime != null and publishTime != ''">and publish_time = #{publishTime}</if>
            <if test="isbn != null and isbn != ''">and isbn = #{isbn}</if>
            <if test="inName != null and inName != ''">and in_name = #{inName}</if>
            <if test="outName != null and outName != ''">and out_name = #{outName}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
        </where>
    </select>

    <insert id="save" parameterType="top.cflwork.vo.BorrowVo">
		insert into sys_borrow
		(
			`id`, 
			`read_user_id_in`, 
			`book_id`, 
			`borrow_time`, 
			`in_time`, 
			`book_name`, 
			`publish_time`, 
			`isbn`, 
			`in_name`, 
			`out_name`, 
			`status`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{readUserIdIn}, 
			#{bookId}, 
			#{borrowTime}, 
			#{inTime}, 
			#{bookName}, 
			#{publishTime}, 
			#{isbn}, 
			#{inName}, 
			#{outName}, 
			#{status}, 
			#{createTime}
		)
	</insert>

    <insert id="batchSave" parameterType="top.cflwork.vo.BorrowVo">
        insert into sys_borrow
        (
        `id`,
        `read_user_id_in`,
        `book_id`,
        `borrow_time`,
        `in_time`,
        `book_name`,
        `publish_time`,
        `isbn`,
        `in_name`,
        `out_name`,
        `status`,
        `create_time`
        )
        values
        <foreach collection="list" item="borrowVo" separator=",">
            (
            #{borrowVo.id},
            #{borrowVo.readUserIdIn},
            #{borrowVo.bookId},
            #{borrowVo.borrowTime},
            #{borrowVo.inTime},
            #{borrowVo.bookName},
            #{borrowVo.publishTime},
            #{borrowVo.isbn},
            #{borrowVo.inName},
            #{borrowVo.outName},
            #{borrowVo.status},
            #{borrowVo.createTime}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="top.cflwork.vo.BorrowVo">
        update sys_borrow
        <set>
            <if test="readUserIdIn != null">`read_user_id_in` = #{readUserIdIn},</if>
            <if test="bookId != null">`book_id` = #{bookId},</if>
            <if test="borrowTime != null">`borrow_time` = #{borrowTime},</if>
            <if test="inTime != null">`in_time` = #{inTime},</if>
            <if test="bookName != null">`book_name` = #{bookName},</if>
            <if test="publishTime != null">`publish_time` = #{publishTime},</if>
            <if test="isbn != null">`isbn` = #{isbn},</if>
            <if test="inName != null">`in_name` = #{inName},</if>
            <if test="outName != null">`out_name` = #{outName},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="createTime != null">`create_time` = #{createTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
		delete from sys_borrow where id=#{id}

	</delete>

    <delete id="batchRemove">
        delete from sys_borrow where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>