<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.cflwork.dao.ReadUserBehaveDao">

	<select id="get" resultType="top.cflwork.vo.ReadUserBehaveVo">
		select `id`,`read_user_id`,`title`,`create_time` from sys_read_user_behave
        where id=#{id}
	</select>

	<select id="list" resultType="top.cflwork.vo.ReadUserBehaveVo">
		select `id`,`read_user_id`,`title`,`create_time` from sys_read_user_behave
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="readUserId != null and readUserId != ''"> and read_user_id = #{readUserId} </if>
		  		  <if test="title != null and title != ''"> and title = #{title} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
        <choose>
            <when test="pager.sort != null and pager.order != null">
                order by ${pager.sort} ${pager.order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="pager!=null and  pager.paging">
			<if test="pager.pageIndex != null and pager.pageSize != null">
				limit #{pager.pageIndex}, #{pager.pageSize}
			</if>
		</if>
	</select>
	
 	<select id="count" resultType="long">
		select count(id) from sys_read_user_behave
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="readUserId != null and readUserId != ''"> and read_user_id = #{readUserId} </if>
		  		  <if test="title != null and title != ''"> and title = #{title} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="top.cflwork.vo.ReadUserBehaveVo">
		insert into sys_read_user_behave
		(
			`id`, 
			`read_user_id`, 
			`title`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{readUserId}, 
			#{title}, 
			now()
		)
	</insert>

    <insert id="batchSave" parameterType="top.cflwork.vo.ReadUserBehaveVo">
        insert into sys_read_user_behave
        (
					                `id`, 
								                `read_user_id`, 
								                `title`, 
								                `create_time`
					        )
        values
        <foreach collection="list" item="readUserBehaveVo" separator=",">
			(
												#{readUserBehaveVo.id}, 
																#{readUserBehaveVo.readUserId}, 
																#{readUserBehaveVo.title}, 
																now()
										)
		</foreach>
    </insert>

	<update id="update" parameterType="top.cflwork.vo.ReadUserBehaveVo">
		update sys_read_user_behave 
		<set>
			<if test="readUserId != null">`read_user_id` = #{readUserId}, </if>
			<if test="title != null">`title` = #{title}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from sys_read_user_behave where id=#{id}

	</delete>
	
	<delete id="batchRemove">
		delete from sys_read_user_behave where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>